// Generated by Dagger (https://dagger.dev).
package com.example.photogalleryapp.di;

import android.content.Context;
import com.example.photogalleryapp.Data.local.PhotoDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DatabaseModule_ProvidePhotoDatabaseFactory implements Factory<PhotoDatabase> {
  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvidePhotoDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public PhotoDatabase get() {
    return providePhotoDatabase(contextProvider.get());
  }

  public static DatabaseModule_ProvidePhotoDatabaseFactory create(
      Provider<Context> contextProvider) {
    return new DatabaseModule_ProvidePhotoDatabaseFactory(contextProvider);
  }

  public static PhotoDatabase providePhotoDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providePhotoDatabase(context));
  }
}
