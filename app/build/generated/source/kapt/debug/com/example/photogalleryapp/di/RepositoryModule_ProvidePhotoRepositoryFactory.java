// Generated by Dagger (https://dagger.dev).
package com.example.photogalleryapp.di;

import com.example.photogalleryapp.Data.local.PhotoDao;
import com.example.photogalleryapp.Data.remote.PexelsApiService;
import com.example.photogalleryapp.domain.repository.PhotoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class RepositoryModule_ProvidePhotoRepositoryFactory implements Factory<PhotoRepository> {
  private final Provider<PhotoDao> photoDaoProvider;

  private final Provider<PexelsApiService> pexelsApiServiceProvider;

  public RepositoryModule_ProvidePhotoRepositoryFactory(Provider<PhotoDao> photoDaoProvider,
      Provider<PexelsApiService> pexelsApiServiceProvider) {
    this.photoDaoProvider = photoDaoProvider;
    this.pexelsApiServiceProvider = pexelsApiServiceProvider;
  }

  @Override
  public PhotoRepository get() {
    return providePhotoRepository(photoDaoProvider.get(), pexelsApiServiceProvider.get());
  }

  public static RepositoryModule_ProvidePhotoRepositoryFactory create(
      Provider<PhotoDao> photoDaoProvider, Provider<PexelsApiService> pexelsApiServiceProvider) {
    return new RepositoryModule_ProvidePhotoRepositoryFactory(photoDaoProvider, pexelsApiServiceProvider);
  }

  public static PhotoRepository providePhotoRepository(PhotoDao photoDao,
      PexelsApiService pexelsApiService) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providePhotoRepository(photoDao, pexelsApiService));
  }
}
